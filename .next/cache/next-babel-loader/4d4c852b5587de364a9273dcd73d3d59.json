{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Link } from '../routes';\nimport slug from '../helpers/slug';\n\nvar ChannelGrid = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChannelGrid, _React$Component);\n\n  var _super = _createSuper(ChannelGrid);\n\n  function ChannelGrid() {\n    _classCallCheck(this, ChannelGrid);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ChannelGrid, [{\n    key: \"render\",\n    value: function render() {\n      var channels = this.props.channels;\n      return __jsx(\"div\", {\n        className: \"jsx-717556532\" + \" \" + \"channels\"\n      }, channels.map(function (channel) {\n        return __jsx(Link, {\n          route: \"channel\",\n          params: {\n            slug: slug(channel.title),\n            id: channel.id\n          },\n          prefetch: true,\n          key: channel.id\n        }, __jsx(\"a\", {\n          className: \"jsx-717556532\" + \" \" + \"channel\"\n        }, __jsx(\"img\", {\n          src: channel.urls.logo_image.original,\n          alt: \"\",\n          className: \"jsx-717556532\"\n        }), __jsx(\"h2\", {\n          className: \"jsx-717556532\"\n        }, channel.title)));\n      }), __jsx(_JSXStyle, {\n        id: \"717556532\"\n      }, \".channels.jsx-717556532{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-717556532{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-717556532 img.jsx-717556532{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h2.jsx-717556532{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xccGl6YXJcXERlc2t0b3BcXHBvZGNhc3RcXGNvbXBvbmVudHNcXENoYW5uZWxHcmlkLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQmtCLEFBR3dCLEFBTUMsQUFNSSxBQUtOLFlBQ0ksQ0FqQkYsQ0FNTSxJQU1vQixTQVgzQixDQWlCRyxNQVhMLE1BTGlELElBaUJuRCxDQVhZLFFBWUgsS0FQUCxXQUNiLEVBT0Esd0JBWkEsR0FOQSIsImZpbGUiOiJDOlxcVXNlcnNcXHBpemFyXFxEZXNrdG9wXFxwb2RjYXN0XFxjb21wb25lbnRzXFxDaGFubmVsR3JpZC5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMaW5rIH0gZnJvbSAnLi4vcm91dGVzJ1xyXG5pbXBvcnQgc2x1ZyBmcm9tICcuLi9oZWxwZXJzL3NsdWcnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFubmVsR3JpZCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBjaGFubmVscyB9ID0gdGhpcy5wcm9wc1xyXG5cclxuICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImNoYW5uZWxzXCI+XHJcbiAgICAgIHsgY2hhbm5lbHMubWFwKChjaGFubmVsKSA9PiAoXHJcbiAgICAgICAgPExpbmsgcm91dGU9J2NoYW5uZWwnIFxyXG4gICAgICAgICAgcGFyYW1zPXt7IHNsdWc6IHNsdWcoY2hhbm5lbC50aXRsZSksIGlkOiBjaGFubmVsLmlkIH19IFxyXG4gICAgICAgICAgcHJlZmV0Y2gga2V5PXtjaGFubmVsLmlkfT5cclxuICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImNoYW5uZWxcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9eyBjaGFubmVsLnVybHMubG9nb19pbWFnZS5vcmlnaW5hbCB9IGFsdD1cIlwiLz5cclxuICAgICAgICAgICAgPGgyPnsgY2hhbm5lbC50aXRsZSB9PC9oMj5cclxuICAgICAgICAgIDwvYT5cclxuICAgICAgICA8L0xpbms+XHJcbiAgICAgICkpIH1cclxuXHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAuY2hhbm5lbHMge1xyXG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xyXG4gICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmNoYW5uZWwge1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxuICAgICAgICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuY2hhbm5lbCBpbWcge1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBoMiB7XHJcbiAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvZGl2PlxyXG4gIH1cclxufSJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\pizar\\\\\\\\Desktop\\\\\\\\podcast\\\\\\\\components\\\\\\\\ChannelGrid.jsx */\"));\n    }\n  }]);\n\n  return ChannelGrid;\n}(React.Component);\n\nexport { ChannelGrid as default };","map":{"version":3,"sources":["C:/Users/pizar/Desktop/podcast/components/ChannelGrid.jsx"],"names":["Link","slug","ChannelGrid","channels","props","map","channel","title","id","urls","logo_image","original","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;IAEqBC,W;;;;;;;;;;;;;6BACV;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAGP,aAAO;AAAA,2CAAe;AAAf,SACHA,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD;AAAA,eACb,MAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AACE,UAAA,MAAM,EAAE;AAAEL,YAAAA,IAAI,EAAEA,IAAI,CAACK,OAAO,CAACC,KAAT,CAAZ;AAA6BC,YAAAA,EAAE,EAAEF,OAAO,CAACE;AAAzC,WADV;AAEE,UAAA,QAAQ,MAFV;AAEW,UAAA,GAAG,EAAEF,OAAO,CAACE;AAFxB,WAGE;AAAA,6CAAa;AAAb,WACE;AAAK,UAAA,GAAG,EAAGF,OAAO,CAACG,IAAR,CAAaC,UAAb,CAAwBC,QAAnC;AAA8C,UAAA,GAAG,EAAC,EAAlD;AAAA;AAAA,UADF,EAEE;AAAA;AAAA,WAAML,OAAO,CAACC,KAAd,CAFF,CAHF,CADa;AAAA,OAAb,CADG;AAAA;AAAA,k1FAAP;AAuCD;;;;EA3CsCK,KAAK,CAACC,S;;SAA1BX,W","sourcesContent":["import { Link } from '../routes'\r\nimport slug from '../helpers/slug'\r\n\r\nexport default class ChannelGrid extends React.Component {\r\n  render() {\r\n    const { channels } = this.props\r\n\r\n    return <div className=\"channels\">\r\n      { channels.map((channel) => (\r\n        <Link route='channel' \r\n          params={{ slug: slug(channel.title), id: channel.id }} \r\n          prefetch key={channel.id}>\r\n          <a className=\"channel\">\r\n            <img src={ channel.urls.logo_image.original } alt=\"\"/>\r\n            <h2>{ channel.title }</h2>\r\n          </a>\r\n        </Link>\r\n      )) }\r\n\r\n      <style jsx>{`\r\n        .channels {\r\n          display: grid;\r\n          grid-gap: 15px;\r\n          padding: 15px;\r\n          grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n        }\r\n        .channel {\r\n          display: block;\r\n          margin-bottom: 0.5em;\r\n          color: #333;\r\n          text-decoration: none;\r\n        }\r\n        .channel img {\r\n          border-radius: 3px;\r\n          box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n          width: 100%;\r\n        }\r\n        h2 {\r\n          padding: 5px;\r\n          font-size: 0.9em;\r\n          font-weight: 600;\r\n          margin: 0;\r\n          text-align: center;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}